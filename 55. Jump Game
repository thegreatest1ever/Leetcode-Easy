function canJump(nums) {
  // Initialize the maximum reachable index
  let maxReach = 0;

  // Iterate through the array
  for (let i = 0; i < nums.length; i++) {
    // If the current index is not reachable, return false
    if (i > maxReach) {
      return false;
    }

    // Update the maximum reachable index
    maxReach = Math.max(maxReach, i + nums[i]);

    // If the maximum reachable index surpasses the last index, return true
    if (maxReach >= nums.length - 1) {
      return true;
    }
  }

  return false;
}
//
class Solution(object):
    def canJump(self, nums):
        max_reach = 0
        for i in range(len(nums)):
            if i > max_reach:
                return False
            max_reach = max(max_reach, i + nums[i])
            if max_reach >= len(nums) - 1:
                return True
        return False
